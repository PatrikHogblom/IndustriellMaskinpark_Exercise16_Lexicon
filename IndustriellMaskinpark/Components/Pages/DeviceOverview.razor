@page "/deviceoverview"
@using Microsoft.AspNetCore.Components.QuickGrid
@rendermode InteractiveServer

<h3>DeviceOverview</h3>

<button type="button" class="btn btn-outline-success" @onclick="() => GoToAddDevicePage()">Add Device</button>

@if (devicesQueryable != null)
{
    @if(IsDeleted == true)
    {
        <div class="alert @StatusClass">@Message</div>
    }
    <QuickGrid Items="@devicesQueryable" Pagination="@pagination">
        <PropertyColumn Property="@(d => d.Id)" IsDefaultSortColumn="true" Title="ID" Sortable="true" />
        <PropertyColumn Property="@(d => d.Location)" Title="Location" Sortable="true" />
        <PropertyColumn Property="@(d => d.Date)" Title="Date" Sortable="true" />
        <PropertyColumn Property="@(d => d.Type)" Title="Type" Sortable="true" />
        <PropertyColumn Property="@(d => d.Status)" Title="Status" Sortable="true" />
        <TemplateColumn>
            @{
                var device = context; // Assuming 'context' represents the current item
            }
            <button type="button" class="btn btn-outline-danger" @onclick="() => DeleteDevice(device.Id)">Delete</button>
            <button type="button" class="btn btn-outline-warning" @onclick="() => GoToEditPage(device.Id)">Edit</button>
            <button type="button" class="btn btn-outline-info" @onclick="() => GoToDetailsPage(device.Id)">Details</button>
            <button type="button" class="btn btn-outline-primary" @onclick="() => GoToAddSensorValuePage(device.Id)">Send Value</button>
        </TemplateColumn>

    </QuickGrid>

    <Paginator State="@pagination" />
}
else
{
    <p>Loading devices...</p>
}




